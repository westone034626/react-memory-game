{"version":3,"sources":["components/Card.module.css","App.module.css","components/Modal.module.css","components/Card.tsx","components/Modal.tsx","App.tsx","index.tsx"],"names":["module","exports","Card","card","handleChoice","flipped","className","styles","cardImage","style","backgroundImage","src","process","onClick","Modal","isOpen","turns","handleButton","layer","modalContainer","cardImages","matched","App","useState","isDisable","setIsDisable","cards","setCards","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","isDone","setIsDone","shuffleCards","shuffledCards","sort","Math","random","map","index","id","useEffect","setTimeout","resetTurn","length","every","body","document","querySelector","overflow","prev","cardGrid","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.27eed861.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3F8np\",\"cardImage\":\"Card_cardImage__3HYsf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"cardGrid\":\"App_cardGrid__3f7gy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layer\":\"Modal_layer__3_ehI\",\"modalContainer\":\"Modal_modalContainer__2Uvta\"};","import React from 'react';\nimport styles from './Card.module.css';\nimport { CardProps } from '../App';\n\ninterface CardComponentProps {\n  card: CardProps;\n  flipped: boolean;\n  handleChoice: (arg1: CardProps) => void;\n}\n\nconst Card: React.FC<CardComponentProps> = ({\n  card,\n  handleChoice,\n  flipped,\n}) => {\n  const handleClick = () => {\n    handleChoice(card);\n  };\n  return (\n    <div className={styles.card}>\n      {flipped ? (\n        <div\n          className={`${styles.cardImage}`}\n          style={{ backgroundImage: `url(${card.src})` }}\n        ></div>\n      ) : (\n        <div\n          className={`${styles.cardImage}`}\n          style={{\n            backgroundImage: `url(${process.env.PUBLIC_URL}/img/cover.png)`,\n          }}\n          onClick={handleClick}\n        ></div>\n      )}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport styles from './Modal.module.css';\n\ninterface ModalProps {\n  isOpen: boolean;\n  turns: number;\n  handleButton: () => void;\n}\n\nconst Modal: React.FC<ModalProps> = ({ isOpen, turns, handleButton }) => {\n  return isOpen ? (\n    <div className={styles.layer}>\n      <div className={styles.modalContainer}>\n        <h1>클리어</h1>\n        <p>Turns: {turns}</p>\n        <button onClick={handleButton}>다시 하기</button>\n      </div>\n    </div>\n  ) : null;\n};\n\nexport default Modal;\n","import { useEffect, useState } from 'react';\nimport styles from './App.module.css';\nimport Card from './components/Card';\nimport Modal from './components/Modal';\n\nconst cardImages = [\n  { src: `${process.env.PUBLIC_URL}/img/helmet-1.png`, matched: false },\n  { src: `${process.env.PUBLIC_URL}/img/potion-1.png`, matched: false },\n  { src: `${process.env.PUBLIC_URL}/img/ring-1.png`, matched: false },\n  { src: `${process.env.PUBLIC_URL}/img/scroll-1.png`, matched: false },\n  { src: `${process.env.PUBLIC_URL}/img/shield-1.png`, matched: false },\n  { src: `${process.env.PUBLIC_URL}/img/sword-1.png`, matched: false },\n];\n\nexport interface CardProps {\n  src: string;\n  id: number;\n  matched: boolean;\n}\n\nfunction App() {\n  const [isDisable, setIsDisable] = useState(false);\n  const [cards, setCards] = useState<CardProps[]>([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState<CardProps | null>(null);\n  const [choiceTwo, setChoiceTwo] = useState<CardProps | null>(null);\n  const [isDone, setIsDone] = useState(false);\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card, index) => ({ ...card, id: index }));\n    setCards(shuffledCards);\n    setTurns(0);\n    setChoiceOne(null);\n    setChoiceTwo(null);\n  };\n\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setIsDisable(true);\n      if (choiceOne.src !== choiceTwo.src) {\n        setTimeout(resetTurn, 1000);\n      } else {\n        setCards(\n          cards.map((card) => {\n            return card.src === choiceOne.src\n              ? { ...card, matched: true }\n              : card;\n          })\n        );\n        resetTurn();\n      }\n    }\n  }, [choiceOne, choiceTwo, cards]);\n\n  useEffect(() => {\n    if (cards.length && cards.every((card) => card.matched)) {\n      setIsDone(true);\n    }\n  }, [cards]);\n\n  useEffect(() => {\n    const body = document.querySelector('body');\n    if (body) body.style.overflow = isDone ? 'hidden' : 'auto';\n  }, [isDone]);\n\n  const handleChoice = (card: CardProps) => {\n    if (isDisable) return;\n    choiceOne === null ? setChoiceOne(card) : setChoiceTwo(card);\n  };\n\n  const handleModalButton = () => {\n    setIsDone(false);\n    shuffleCards();\n  };\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns((prev) => prev + 1);\n    setIsDisable(false);\n  };\n\n  return (\n    <div className={styles.App}>\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>다시 하기</button>\n      {cards.length === 0 ? (\n        <h1>Loading...</h1>\n      ) : (\n        <div className={styles.cardGrid}>\n          {cards.map((card) => (\n            <Card\n              key={card.id}\n              card={card}\n              handleChoice={handleChoice}\n              flipped={\n                (choiceOne ? choiceOne.id === card.id : false) ||\n                (choiceTwo ? choiceTwo.id === card.id : false) ||\n                card.matched\n              }\n            />\n          ))}\n        </div>\n      )}\n      <p>Turns: {turns}</p>\n      <Modal isOpen={isDone} turns={turns} handleButton={handleModalButton} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}